<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
    <CLSCompliant>false</CLSCompliant>
    <TargetFrameworks>$(NetCoreAppCurrent);netstandard1.1;netstandard2.0</TargetFrameworks>
    <ExcludeCurrentNetCoreAppFromPackage>true</ExcludeCurrentNetCoreAppFromPackage>
    <Nullable>enable</Nullable>
  </PropertyGroup>
  <ItemGroup>
    <Compile Include="System.Reflection.Metadata.cs" />
    <Compile Include="System.Reflection.Metadata.Manual.cs" />
    <None Include="ReferenceSourceExcludeApi.txt" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetsNetCoreApp)' == 'true'">
    <ProjectReference Include="..\..\System.Runtime\ref\System.Runtime.csproj" />
    <ProjectReference Include="..\..\System.Collections.Immutable\ref\System.Collections.Immutable.csproj" />
  </ItemGroup>
  <!-- Include these transitive dependencies to overrule NuGet's ProjectReference over PackageReferene behavior. -->
  <ItemGroup Condition="'$(TargetFramework)' == 'netstandard1.1'">
    <PackageReference Include="System.Runtime" Version="$(SystemRuntimeVersion)" />
    <PackageReference Include="System.Collections" Version="$(SystemCollectionsVersion)" />
    <PackageReference Include="System.Runtime.InteropServices" Version="$(SystemRuntimeInteropServicesVersion)" />
  </ItemGroup>
  <ItemGroup Condition="'$(TargetsNetStandard)' == 'true'">
    <ProjectReference Include="..\..\System.Collections.Immutable\ref\System.Collections.Immutable.csproj" />
  </ItemGroup>
</Project>