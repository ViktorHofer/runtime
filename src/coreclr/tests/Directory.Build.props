<Project>

  <Import Project="../Directory.Build.props" />

  <PropertyGroup>
    <IsShipping>false</IsShipping>

    <OSPlatformConfig>$(BuildOS).$(Platform).$(Configuration)</OSPlatformConfig>

    <TestRelativeBasePath Condition="'$(TestRelativeBasePath)' == ''">$(MSBuildThisFileDirectory)src</TestRelativeBasePath>
    <BuildProjectRelativeDir>$([MSBuild]::MakeRelative($(TestRelativeBasePath), $(MSBuildProjectDirectory)))</BuildProjectRelativeDir>

    <!-- BaseIntermediateOutputPath is used by the SDK as the location
         for the lock file, and props/targets from nuget packages. -->
    <BaseIntermediateOutputPath>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'tests', 'coreclr', 'obj', '$(OSPlatformConfig)', 'Managed', '$(BuildProjectRelativeDir)', '$(MSBuildProjectName)'))</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)</IntermediateOutputPath>

    <BaseOutputPath>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'tests', 'coreclr', '$(OSPlatformConfig)', '$(BuildProjectRelativeDir)', '$(MSBuildProjectName)'))</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)</OutputPath>
  </PropertyGroup>
  
  <PropertyGroup>
    <DisableImplicitFrameworkReferences Condition="'$(__SkipFXRestore)' == 'true'">true</DisableImplicitFrameworkReferences>
  </PropertyGroup>

  <ItemGroup Condition="'$(__SkipFXRestore)' == 'true' AND '$(ReferenceSystemPrivateCoreLib)' != 'true'" >
    <Reference Include="$(ArtifactsBinDir)ref\$(NetCoreAppCurrent)\*.dll" Private="false" />
  </ItemGroup>

  <PropertyGroup>
    <RunningOnUnix Condition="('$(RunningOnUnix)' == '') And ('$(MSBuildRuntimeType)' == 'Core') And ('$(OS)'!='Windows_NT')">true</RunningOnUnix>
  </PropertyGroup>

  <!-- Common repo directories -->
  <PropertyGroup>
    <TestProjectDir>$(MSBuildThisFileDirectory)</TestProjectDir>
    <CoreClrTestDir>$(MSBuildThisFileDirectory)</CoreClrTestDir>
    <TestSourceDir>$(TestProjectDir)src\</TestSourceDir>
  </PropertyGroup>

  <!-- Common properties -->
  <PropertyGroup>
    <BinDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsBinDir)', 'coreclr', '$(OSPlatformConfig)'))</BinDir>
    <TestWorkingDir>$([MSBuild]::NormalizeDirectory('$(ArtifactsDir)', 'tests', 'coreclr', '$(OSPlatformConfig)'))</TestWorkingDir>

    <AltJitArch>$(__AltJitArch)</AltJitArch>
  </PropertyGroup>

  <!-- Output paths -->
  <PropertyGroup>
    <!-- When not using the SDK, we want to set this property here so
         that BuildVersionFile gets the correct value. -->
    <BaseIntermediateOutputPath Condition="'$(BaseIntermediateOutputPath)' == '' Or '$(UsingMicrosoftNETSdk)' != 'true'">$(ArtifactsObjDir)</BaseIntermediateOutputPath>
    <IntermediateOutputPath Condition="'$(IntermediateOutputPath)' == ''">$(BaseIntermediateOutputPath)\$(OSPlatformConfig)</IntermediateOutputPath>
    <OutputPath Condition="'$(OutputPath)' == ''">$(BaseIntermediateOutputPath)\coreclr\$(OSPlatformConfig)</OutputPath>
  </PropertyGroup>

    <!-- Targeting Package paths -->
  <PropertyGroup>
    <TargetingPackPath Condition="'$(BaseTargetingPackPath)' == ''">$(ArtifactsDir)TargetingPack\</TargetingPackPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildAllProjects)'=='true'">
    <!-- When we do a traversal build we get all packages up front, don't restore them again -->
    <RestorePackages>false</RestorePackages>
  </PropertyGroup>

  <!-- Which tests shall we build? Default: Priority 0 tests.
    At the command-line, the user can specify /p:CLRTestPriorityToBuild=666 (for example), and
    all tests with CLRTestPriority 666,..., 1 AND 0 will build.

    Consequently, specifying CLRTestPriorityToBuild=1 will build all tests with CLRTestPriority 1 and 0.

    CLRTestPriority = 0 will build only priority 0 cases.

    In other words, the CLRTestPriority cases of 0 are *essential* testcases. The higher the value,
    the less priority we give them.
   -->
  <PropertyGroup>
    <CLRTestPriorityToBuild>0</CLRTestPriorityToBuild>
  </PropertyGroup>

  <!-- Where to put a "testhost" for running corefx tests -->
  <PropertyGroup>
    <TestHostVersion>$(ProductVersion)</TestHostVersion>
    <TestHostRootPath>$([MSBuild]::NormalizeDirectory('$(TestWorkingDir)', 'testhost'))</TestHostRootPath>
    <NETCoreAppTestHostFxrPath>$([MSBuild]::NormalizeDirectory('$(TestHostRootPath)', 'host', 'fxr', '$(TestHostVersion)'))</NETCoreAppTestHostFxrPath>
    <NETCoreAppTestSharedFrameworkPath>$([MSBuild]::NormalizeDirectory('$(TestHostRootPath)', 'shared', 'Microsoft.NETCore.App', '$(TestHostVersion)'))</NETCoreAppTestSharedFrameworkPath>
  </PropertyGroup>

</Project>
