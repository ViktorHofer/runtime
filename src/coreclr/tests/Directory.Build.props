<Project>

  <Import Project="..\Directory.Build.props" />

  <PropertyGroup>
    <TargetFramework>$(NetCoreAppCurrent)</TargetFramework>
    <EnableDefaultItems>false</EnableDefaultItems>
    <IsShipping>false</IsShipping>
    <AltJitArch>$(__AltJitArch)</AltJitArch>
    <DefineConstants>$(DefineConstants);XUNIT_PERF</DefineConstants>
  </PropertyGroup>

  <PropertyGroup>
    <CoreClrTestDir>$(MSBuildThisFileDirectory)</CoreClrTestDir>
    <TestSourceDir>$(CoreClrTestDir)src\</TestSourceDir>

    <TargetingPackPath>$(ArtifactsBinDir)TargetingPack\</TargetingPackPath>

    <TestWorkingDir>$([MSBuild]::NormalizeDirectory('$(BaseRootOutputPath)', '$(OSPlatformConfig)', 'tests'))</TestWorkingDir>
    <TestWorkingIntermediateDir>$([MSBuild]::NormalizeDirectory('$(BaseRootIntermediateOutputPath)', '$(OSPlatformConfig)', 'tests'))</TestWorkingIntermediateDir>

    <TestRelativeBasePath Condition="'$(TestRelativeBasePath)' == ''">$(TestSourceDir)</TestRelativeBasePath>
    <BuildProjectRelativeDir>$([MSBuild]::MakeRelative($(TestRelativeBasePath), $(MSBuildProjectDirectory)))</BuildProjectRelativeDir>

    <BaseOutputPath>$([MSBuild]::NormalizeDirectory('$(TestWorkingDir)', '$(BuildProjectRelativeDir)', '$(MSBuildProjectName)'))</BaseOutputPath>
    <OutputPath>$(BaseOutputPath)</OutputPath>

    <BaseIntermediateOutputPath>$([MSBuild]::NormalizeDirectory('$(TestWorkingIntermediateDir)', '$(BuildProjectRelativeDir)', '$(MSBuildProjectName)'))</BaseIntermediateOutputPath>
    <IntermediateOutputPath>$(BaseIntermediateOutputPath)</IntermediateOutputPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(BuildAllProjects)' == 'true'">
    <!-- When we do a traversal build we get all packages up front, don't restore them again -->
    <RestorePackages>false</RestorePackages>
  </PropertyGroup>

  <!-- Which tests shall we build? Default: Priority 0 tests.
    At the command-line, the user can specify /p:CLRTestPriorityToBuild=666 (for example), and
    all tests with CLRTestPriority 666,..., 1 AND 0 will build.

    Consequently, specifying CLRTestPriorityToBuild=1 will build all tests with CLRTestPriority 1 and 0.

    CLRTestPriority = 0 will build only priority 0 cases.

    In other words, the CLRTestPriority cases of 0 are *essential* testcases. The higher the value,
    the less priority we give them.
   -->
  <PropertyGroup>
    <CLRTestPriorityToBuild>0</CLRTestPriorityToBuild>
  </PropertyGroup>

</Project>
