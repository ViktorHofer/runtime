<Project>
  <Import Project="Directory.Build.props" />

  <ItemGroup>
    <Project Include="src\dirs.proj" />
  </ItemGroup>

  <Import Project="Directory.Build.targets" />

  <Import Project="dir.traversal.targets" />

  <PropertyGroup>
    <TraversalBuildDependsOn>
      BatchRestorePackages;
      $(TraversalBuildDependsOn);
    </TraversalBuildDependsOn>
  </PropertyGroup>

  <ItemGroup>
    <RestoreProjects Include="$(MSBuildThisFileDirectory)scripts\scripts.csproj" />
    <RestoreProjects Include="$(MSBuildThisFileDirectory)src\Common\test_dependencies\test_dependencies.csproj" />
    <RestoreProjects Include="$(MSBuildThisFileDirectory)src\Common\CoreCLRTestLibrary\CoreCLRTestLibrary.csproj" />
    <RestoreProjects Include="$(MSBuildThisFileDirectory)external\external.csproj" />
    <RestoreProjects Include="$(MSBuildThisFileDirectory)src\Common\ilasm\ilasm.ilproj" />
  </ItemGroup>

  <Target Name="BuildTargetingPack" AfterTargets="BatchRestorePackages" Condition="$(__SkipTargetingPackBuild) != 'true'">
    <Message Text="Building Targeting Pack" Importance="High" />
    <Error  Text="BuildOS has not been specified. Please do that then run build again."  Condition="'$(OSGroup)' == 'AnyOS'" />
    <MSBuild Projects="$(MSBuildThisFileDirectory)external\external.csproj"
             Targets="Build" />
  </Target>

  <Target Name="BatchRestorePackages" Condition="$(__SkipPackageRestore) != 'true'">
    <Message Importance="High" Text="[$([System.DateTime]::Now.ToString('HH:mm:ss.ff'))] Restoring all packages..." />

    <!-- restore all csproj's with PackageReferences in one pass -->
    <MSBuild Projects="build.proj"
             Properties="RestoreProj=%(RestoreProjects.Identity)"
             Targets="RestorePackage" />

    <Message Importance="High" Text="[$([System.DateTime]::Now.ToString('HH:mm:ss.ff'))] Restoring all packages...Done." />
  </Target>

  <Target Name="RestorePackage">
    <PropertyGroup>
      <_ConfigurationProperties>/p:OSGroup=$(OSGroup) /p:Platform=$(Platform) /p:Configuration=$(Configuration)</_ConfigurationProperties>
      <DotnetRestoreCommand Condition="'$(__DistroRid)' == ''">"$(DotNetTool)" restore $(RestoreProj) $(PackageVersionArg) /p:SetTFMForRestore=true $(_ConfigurationProperties)</DotnetRestoreCommand>
      <DotnetRestoreCommand Condition="'$(__DistroRid)' != ''">"$(DotNetTool)" restore -r $(__DistroRid) $(RestoreProj) $(PackageVersionArg) /p:SetTFMForRestore=true $(_ConfigurationProperties)</DotnetRestoreCommand>
    </PropertyGroup>
    <Exec Command="$(DotnetRestoreCommand)" />
  </Target>

  <!-- Override RestorePackages from dir.traversal.targets and do a batch restore -->
  <Target Name="RestorePackages" DependsOnTargets="BatchRestorePackages" />
</Project>
