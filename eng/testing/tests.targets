<Project>
  <!-- Run target (F5) support. -->
  <PropertyGroup>
    <RunWorkingDirectory>$(OutDir)</RunWorkingDirectory>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETCoreApp'">
    <RunCommand>$(DotNetTool)</RunCommand>
    <RunArguments>test $(TargetPath) --settings $(OutDir).runsettings</RunArguments>
  </PropertyGroup>

  <PropertyGroup Condition="'$(TargetFrameworkIdentifier)' == '.NETFramework'">
    <RunCommand>$(DevEnvDir)Extensions\TestPlatform\vstest.console.exe</RunCommand>
    <RunArguments>$(TargetPath) --settings:$(OutDir).runsettings</RunArguments>
  </PropertyGroup>

  <PropertyGroup>
    <ArchiveTestsAfterTargets>PrepareForRun</ArchiveTestsAfterTargets>

    <!-- For browser we need to hook up the target with DependsOnTargets in PublishTestAsSelfContained
    because we do a Publish which runs after Build, if we run after PrepareForRun we would generated
    an empty zip because we haven't published the selfcontained app.  -->
    <ArchiveTestsAfterTargets Condition="'$(TargetOS)' == 'Browser'" />
  </PropertyGroup>

  <!-- Archive test binaries. -->
  <Target Name="ArchiveTests"
          Condition="'$(ArchiveTests)' == 'true' and '$(IgnoreForCI)' != 'true' and ('$(TargetsMobile)' != 'true' or '$(TargetOS)' == 'Browser')"
          AfterTargets="$(ArchiveTestsAfterTargets)"
          DependsOnTargets="GenerateRunScript">
    <Error Condition="'$(TestArchiveTestsDir)' == ''" Text="TestArchiveTestsDir property to archive the test folder must be set." />

    <PropertyGroup>
      <_ZipSourceDirectory>$(OutDir)</_ZipSourceDirectory>
      <_ZipSourceDirectory Condition="'$(TargetOS)' == 'Browser'">$(BundleDir)</_ZipSourceDirectory>
    </PropertyGroup>

    <MakeDir Directories="$(TestArchiveTestsDir)" />
    <ZipDirectory SourceDirectory="$(_ZipSourceDirectory)"
                  DestinationFile="$([MSBuild]::NormalizePath('$(TestArchiveTestsDir)', '$(TestProjectName).zip'))"
                  Overwrite="true" />
    <!-- delete the BundleDir and PublishDir in CI builds to save disk space on build agents since they're no longer needed -->
    <RemoveDir Condition="'$(ContinuousIntegrationBuild)' == 'true'" Directories="$(BundleDir);$(PublishDir)" />
  </Target>

  <Import Project="$(MSBuildThisFileDirectory)mobile\tests.targets" Condition="'$(TargetsMobile)' == 'true'" />
  <Import Project="$(MSBuildThisFileDirectory)xunit\xunit.targets" Condition="'$(TestFramework)' == 'xunit'" />
  
  <Import Project="$(MSBuildThisFileDirectory)outerBuild.targets" Condition="'$(IsCrossTargetingBuild)' == 'true'" />
</Project>
